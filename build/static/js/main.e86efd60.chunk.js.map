{"version":3,"sources":["components/Header/index.jsx","components/MesageModel/index.jsx","components/Table/index.jsx","App.js","reportWebVitals.js","index.js","utils/sortAddress.js","utils/timeDuration.js"],"names":["Header","props","userAccount","onConnect","className","type","onClick","disabled","MessageModel","open","onClose","wave","useState","text","setText","handleClose","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","fullWidth","onChange","e","input","currentTarget","value","variant","DialogActions","Table","data","class","style","height","scope","map","item","index","sortAddress","address","message","timeDuration","timestamp","App","ethereum","window","currentAccount","setCurrentAccount","allWaves","setAllWaves","waveCount","setWaveCount","spinner","setSpinner","isMessageModelOpen","setIsMessageModelOpen","contractAddress","getAllWaves","a","provider","ethers","providers","Web3Provider","signer","getSigner","waveportalContract","Contract","contractABI","abi","waves","wavesCleaned","forEach","push","waver","Date","console","log","checkIfWalletIsConnected","request","method","accounts","length","account","connectWallet","alert","gasLimit","waveTxn","wait","getWaveCount","getTotalWaves","count","toNumber","useEffect","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports","substring","Months","timeString","getDate","getMonth","getFullYear"],"mappings":"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","file":"static/js/main.e86efd60.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const { userAccount, onConnect } = props;\r\n\r\n  return (\r\n    <div className=\"nav  justify-content-end  bg-light py-2 px-2\">\r\n      <div className=\"nav-item\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-secondary\"\r\n          onClick={onConnect}\r\n          disabled={userAccount}\r\n        >\r\n          {userAccount ? `Connected` : \"Connect Wallet\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nconst MessageModel = (props) => {\r\n  const { open, onClose, wave } = props;\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setText(\"\");\r\n    onClose();\r\n  };\r\n\r\n  const handleSend = () => {\r\n    onClose();\r\n    wave(text);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { currentTarget: input } = e;\r\n    setText(input.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle className=\"border-bottom  border-secondary mb-4 mx-2 d-flex flex-row justify-content-between\">\r\n          <span> Message</span>\r\n          <span onClick={handleClose}> x</span>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Hey! what's up, send me your message\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"text\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            variant=\"standard\"\r\n            value={text}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className=\"text-center justify-content-center\">\r\n          <button\r\n            disabled={text === \"\"}\r\n            className=\"btn btn-sm btn-primary text-center\"\r\n            onClick={handleSend}\r\n          >\r\n            Send\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageModel;\r\n","import React from \"react\";\r\nimport { sortAddress } from \"../../utils/sortAddress\";\r\nimport { timeDuration } from \"../../utils/timeDuration\";\r\nconst Table = (props) => {\r\n  const { data } = props;\r\n\r\n  return (\r\n    <div class=\"table-responsive\" style={{ height: \"200px\" }}>\r\n      <table\r\n        class=\"text-center  table \r\n      \r\n    \"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Address</th>\r\n            <th scope=\"col\">Message</th>\r\n            <th scope=\"col\">Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, index) => (\r\n            <tr key={index}>\r\n              <th scope=\"row\">{index + 1}</th>\r\n              <td>{sortAddress(item.address)}</td>\r\n              <td>{item.message}</td>\r\n              <td>{timeDuration(item.timestamp)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport contractABI from \"./utils/WavePortal.json\";\r\nimport { Header, MessageModel, Table } from \"./components\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const { ethereum } = window;\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  const [allWaves, setAllWaves] = useState([]);\r\n  const [waveCount, setWaveCount] = useState(0);\r\n  const [spinner, setSpinner] = useState(false);\r\n\r\n  const [isMessageModelOpen, setIsMessageModelOpen] = useState(false);\r\n  const contractAddress = \"0x8e50CC6674873bb73ff82eD1487ae9cA2E047b09\";\r\n\r\n  const handleModelClosed = () => {\r\n    setIsMessageModelOpen(false);\r\n  };\r\n\r\n  const handleMessageModel = () => {\r\n    setIsMessageModelOpen(true);\r\n  };\r\n\r\n  const getAllWaves = async () => {\r\n    if (!ethereum) return;\r\n    try {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const waveportalContract = new ethers.Contract(\r\n        contractAddress,\r\n        contractABI.abi,\r\n        signer\r\n      );\r\n      const waves = await waveportalContract.getAllWaves();\r\n      let wavesCleaned = [];\r\n      waves.forEach((wave) => {\r\n        wavesCleaned.push({\r\n          address: wave.waver,\r\n          timestamp: new Date(wave.timestamp * 1000),\r\n          message: wave.message,\r\n        });\r\n      });\r\n      setAllWaves(wavesCleaned);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setAllWaves([]);\r\n    }\r\n  };\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    try {\r\n      if (!ethereum) {\r\n        console.log(\"Make sure you have metamask!\");\r\n        return;\r\n      } else {\r\n        console.log(\"We have the ethereum object \", ethereum);\r\n      }\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n      if (accounts.length !== 0) {\r\n        const account = accounts[0];\r\n        console.log(\"Found an authorized account\", account);\r\n        setCurrentAccount(account);\r\n      } else {\r\n        console.log(\"No authorized account found\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (!ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n      }\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const wave = async (message) => {\r\n    try {\r\n      if (ethereum) {\r\n        setSpinner(true);\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const waveportalContract = new ethers.Contract(\r\n          contractAddress,\r\n          contractABI.abi,\r\n          signer\r\n        );\r\n        const waveTxn = await waveportalContract.wave(message, {\r\n          gasLimit: 300000,\r\n        });\r\n        await waveTxn.wait();\r\n        getWaveCount();\r\n        getAllWaves();\r\n        setSpinner(false);\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setSpinner(false);\r\n    }\r\n  };\r\n\r\n  const getWaveCount = async () => {\r\n    try {\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const waveportalContract = new ethers.Contract(\r\n          contractAddress,\r\n          contractABI.abi,\r\n          signer\r\n        );\r\n        const count = await waveportalContract.getTotalWaves();\r\n        setWaveCount(count.toNumber());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setWaveCount(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWaveCount();\r\n    getAllWaves();\r\n  }, [currentAccount]);\r\n\r\n  return (\r\n    <div>\r\n      <Header userAccount={currentAccount} onConnect={connectWallet} />\r\n      <div className=\"mainContainer\">\r\n        <div className=\"dataContainer container\">\r\n          <div className=\"header\">Hey there!</div>\r\n          <div className=\"header\">Total waves: {waveCount}</div>\r\n\r\n          <div className=\"bio\">\r\n            I am Aagam and it's my first project so that's pretty cool right?\r\n            Connect your Ethereum wallet and wave at me!\r\n          </div>\r\n\r\n          <MessageModel\r\n            open={isMessageModelOpen}\r\n            onClose={handleModelClosed}\r\n            wave={wave}\r\n          />\r\n          {spinner ? (\r\n            <button class=\"waveButton\" type=\"button\" disabled>\r\n              <span\r\n                class=\"spinner-grow spinner-grow-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              ></span>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              className=\"waveButton\"\r\n              onClick={handleMessageModel}\r\n            >\r\n              Wave at Me\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"container mt-5 my-2 bg-light border\">\r\n        <Table data={allWaves} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nreportWebVitals();\n","const sortAddress = (address) => {\r\n  const _sortAddress =\r\n    address.substring(1, 3) +\r\n    \"....\" +\r\n    address.substring(address.length - 3, address.length - 1);\r\n  return _sortAddress;\r\n};\r\n\r\nmodule.exports = {\r\n  sortAddress,\r\n};\r\n","const Months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst timeDuration = (timeString) => {\r\n  const _data =\r\n    timeString.getDate() +\r\n    \" \" +\r\n    Months[timeString.getMonth()] +\r\n    \",\" +\r\n    timeString.getFullYear();\r\n  return _data;\r\n};\r\n\r\nmodule.exports = {\r\n  timeDuration,\r\n};\r\n"],"sourceRoot":""}